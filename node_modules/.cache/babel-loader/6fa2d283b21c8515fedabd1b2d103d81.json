{"ast":null,"code":"var _jsxFileName = \"/Users/new-user-2019/Desktop/FacialRecog/smart-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\nimport Rank from './Components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '31e16c775015474fb53de6f7ee6410ef'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    entries: 0,\n    joined: \"\"\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          route = _this$state.route,\n          box = _this$state.box,\n          imageUrl = _this$state.imageUrl;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })) : this.state.route === 'signin' ? React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/new-user-2019/Desktop/FacialRecog/smart-brain/src/App.js"],"names":["React","Component","Navigation","Clarifai","FaceRecognition","Logo","ImageLinkForm","SignIn","Register","Rank","Particles","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","password","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport Clarifai from'clarifai';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\nimport Rank from './Components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport './App.css';\n\n\nconst app = new Clarifai.App({\n apiKey: '31e16c775015474fb53de6f7ee6410ef'\n});\n\nconst particlesOptions = {\n            \t\tparticles: {\n            \t\t\tnumber: {\n            \t\t\tvalue: 100,\n            \t\t\tdensity: {\n            \t\t\t\tenable: true,\n            \t\t\t\tvalue_area: 800\n            \t\t\t}\n            \t\t}\n            \t}\n            }\n            \nconst initialState = {\n  input: '',\n      imageUrl: '',\n      box: {},\n      route:'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: \"\"\n}\n}\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = initialState;\n      \n\t}\n\n  loadUser = (data) => {\n    this.setState({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        password: data.password,\n        entries: data.entries,\n        joined: data.joined\n      }})\n  }\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n\n    app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n    .then(response => {\n      if (response) {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n          id: this.state.id\n      })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, { entries: count}))\n        })\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n  \n\n  }\n\n\tonRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n\t\tthis.setState({route:route})\n\t}\n\trender () {\n   const {isSignedIn, route, box, imageUrl} = this.state;\n  return (\n    <div className=\"App\">\n     <Particles className = 'particles'\n              params={particlesOptions}\n            />\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n      { route === 'home' \n      \t? <div><Logo />\n\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/> \n\n      <ImageLinkForm \n              onInputChange={this.onInputChange} \n              onButtonSubmit={this.onButtonSubmit}\n      />\n          \n\n      <FaceRecognition\n      box={box}\n      imageUrl={imageUrl}\n      />\n\n            \n            </div>\n        :( this.state.route === 'signin'\n        \t? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} /> \n        \t: <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        \t)\n        }\n    </div>\n  );\n}\n\t\n}\t\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}